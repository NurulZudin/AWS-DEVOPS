AWSTemplateFormatVersion: 2010-09-09
Description: |
  This template will create Application Load Balancer with ASG using LT

Parameters:
  CallVPC:
    Description: VPC Id of your existing account
    Type: AWS::EC2::VPC::Id
  CallSubnets:
    Description: List of Subnet Ids in your VPC. Please select at least 2 of them.
    Type: List<AWS::EC2::Subnet::Id>
  KeyName:
    Description: Select your key pair from the list
    Type: AWS::EC2::KeyPair::KeyName
  CallInstanceType:
    Description: Select the instance type for your web server.
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t3.micro
      - t3a.micro
      - t2.nano
      - t3.nano

Mappings:
  RegionImageMap:
    us-east-1:
      AMI: ami-0742b4e673072066f
    us-east-2:
      AMI: ami-05d72852800cbf29e
    us-west-1:
      AMI: ami-0577b787189839998
    us-west-2:
      AMI: ami-0518bb0e75d3619ca
    eu-west-1:
      AMI: ami-0ffea00000f287d30

Resources:
  CallSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enables SSH and HTTP ports #required
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      VpcId: !Ref CallVPC

  CallALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 25
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 3
      VpcId: !Ref CallVPC

  CallApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      SecurityGroups:
        - !GetAtt CallSecGroup.GroupId
      Subnets: !Ref CallSubnets

  CallALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: #required
        - Type: forward
          TargetGroupArn: !Ref CallALBTargetGroup
      LoadBalancerArn: !Ref CallApplicationLoadBalancer #required
      Port: 80
      Protocol: HTTP

  CallLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        KeyName: !Ref KeyName
        ImageId: !FindInMap 
          - RegionImageMap
          - !Ref AWS::Region
          - AMI
        UserData: !Base64 |
            #!/bin/bash
            yum update -y
            yum install -y httpd
            TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
            && PRIVATE_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/local-ipv4`
            TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
            && PUBLIC_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/public-ipv4` 
            DATE_TIME=`date`
            chmod -R 777 /var/www/html
            echo "<html>
            <head>
                <title> Congratulations! You have created an instance from Launch Template</title>
            </head>
            <body>
                <h1>This web server is launched from launch template by YOUR_NAME</h1>
                <p>This instance is created at <b>$DATE_TIME</b></p>
                <p>Private IP address of this instance is <b>$PRIVATE_IP</b></p>
                <p>Public IP address of this instance is <b>$PUBLIC_IP</b></p>
            </body>
            </html>" > /var/www/html/index.html
            systemctl start httpd
            systemctl enable httpd
        SecurityGroupIds:
          - !Ref CallSecGroup
        InstanceType: !Ref CallInstanceType
  
  CallAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: !GetAZs 
      LaunchTemplate:
        LaunchTemplateId: !Ref CallLaunchTemplate
        Version: '1'
      HealthCheckType: ELB
      HealthCheckGracePeriod: 300
      MinSize: '1'
      DesiredCapacity: '2'
      MaxSize: '3'
      TargetGroupARNs:
        - !Ref CallALBTargetGroup

  CallCPUPolicy:
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AutoScalingGroupName: !Ref CallAutoScalingGroup
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 40.0

Outputs:
  AppURL:
    Description: URL of Call App
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt CallApplicationLoadBalancer.DNSName